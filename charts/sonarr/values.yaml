# -----------------------------------------------------------------------------
# -- Global
# -----------------------------------------------------------------------------
# This is to override the chart name.
nameOverride: ""        # Defaults to <.Chart.Name>
fullnameOverride: ""    # Defaults to <.Release.Name>-<.Chart.Name>

# -----------------------------------------------------------------------------
# -- Configure Pods and Containers
# -----------------------------------------------------------------------------
containers:
  # Key of the container (e.g. app, db, broker). Used for naming objects.
  app:
    # Define the container as a initContainer.
    init:
      enabled: false
      restartPolicy: Always

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    # This sets the container image. 
    # Ref: https://kubernetes.io/docs/concepts/containers/images/
    image:
      repository: lscr.io/linuxserver/sonarr
      # This sets the pull policy for images.
      pullPolicy: Always
      # Overrides the image tag. Default is the chart appVersion.
      tag: ""

    # This is for setting up a service
    # Ref: https://kubernetes.io/docs/concepts/services-networking/service/
    service:
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    - name: http
      enabled: true
      port: 8989
      protocol: TCP
      ingress: true

    # This is to setup the liveness and readiness probes 
    # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    livenessProbe:
      httpGet:
        path: /
        port: 8989
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /
        port: 8989
      initialDelaySeconds: 15
      periodSeconds: 10

    # Additional command line arguments for the container.
    args: []

    # Environment variables to pass to the deployed container. A specific ConfigMap is created.
    # @default -- `[]` (See [values.yaml])
    env:
    - name: TZ
      value: Europe/Amsterdam
    - name: PUID
      value: "0"
    - name: PGID
      value: "0"
    
    # Use ConfigMap from another container (key). Overrides `env`.
    # @default -- `""` (See [values.yaml])
    envUse: ""

   # Secret variables to pass to the deployed container. A specific Secret is created.
   # @default -- `[]` (See [values.yaml])
    secret: []

    # Use ConfigMap from another container (key). Overrides `secret`.
    # @default -- `""` (See [values.yaml])
    secretUse: ""

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
    - mountPath: /config
      readOnly: false
      name: config
    - mountPath: /downloads
      readOnly: false
      name: downloads
    - mountPath: /tv
      readOnly: false
      name: media

    resources: {}
      #limits:
      #  cpu: 12m
      #  memory: 500Mi
      #requests:
      #  cpu: 11m
      #  memory: 400Mi

# This is for the secrets for pulling an image from a private repository
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is for setting Kubernetes Annotations to a Pod.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# -----------------------------------------------------------------------------
# -- Security
# -----------------------------------------------------------------------------
# This section builds out the service account.
# Ref: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -----------------------------------------------------------------------------
# -- Services, Load Balancing, and Networking
# -----------------------------------------------------------------------------
# Define the pods DNS configuration. 
# Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig:
  options:
  - name: ndots
    value: "1"

# This is for setting up a service.
# Ref: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP

# This block is for setting up the Traefik ingress. 
# Ref: https://doc.traefik.io/traefik/routing/providers/kubernetes-crd/#kind-ingressroutetcp
ingress:
  enabled: true

  # Kind of ingress route (IngressRoute or IngressRouteTCP).
  # @default -- 'IngressRoute' (See [values.yaml])
  kind: IngressRoute

  # Root domain (<domain>.<tld>).
  rootDomain: domain.tld

  # Override the subdomain.
  # @default -- '""' (See [values.yaml])
  subDomainOverride: ""

  # Entry point of the route.
  # @default -- 'websecure' (See [values.yaml])
  entryPoints:
  - websecure

  # Attach middlewares to ingress route.
  middlewares:
  - secure-headers

  # The TLS secretName for the certificate
  tlsSecret: ""
  
  # Ingress annotations.
  annotations: {}

# -----------------------------------------------------------------------------
# -- Storage
# -----------------------------------------------------------------------------
# When mounting volumes to the pod, define the secret and namespace where the credentials are located. For now only needed for SMB.
credentials:
  smb:
    secret: smb-credentials
    namespace: default

# Additional volumes on the output Deployment definition.
# Longhorn as storage required.
volumes:
- name: config
  className: longhorn
  accessModes: 
  - ReadWriteOnce
  storage: 3Gi
  source: ""
- name: downloads
  className: smb
  accessModes:
  - ReadWriteMany
  storage: 100Gi
  source: //SERVER/Downloads
- name: media
  className: smb
  accessModes: 
  - ReadWriteMany
  storage: 100Gi
  source: //SERVER/Media

# -----------------------------------------------------------------------------
# -- Scheduling, Preemption and Eviction
# -----------------------------------------------------------------------------
# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []

# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# -----------------------------------------------------------------------------
# -- Workloads
# -----------------------------------------------------------------------------
# This will set the replicaset count. 
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This section is for setting up autoscaling. 
# Ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
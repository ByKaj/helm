# -----------------------------------------------------------------------------
# -- Global
# -----------------------------------------------------------------------------
# This is to override the chart name.
nameOverride: ""        # Defaults to <.Chart.Name>
fullnameOverride: ""    # Defaults to <.Release.Name>-<.Chart.Name>

global:
  # Local timezone
  # @default -- "Europe/Amsterdam"
  timezone: Europe/Amsterdam

  # Storage request for the config folder
  configStorage: 100Gi

  # Change to the amount of agent nodes used for storage
  configReplicas: 3

  # Source and target for your media folder
  media:
    # Mount path in the container
    # @default -- "/media"
    mountPath: /media
    # Source on the SMB share
    source: //SERVER/Media
    subPath: ""

  # Domainname of the application
  domainname: example.com

  # The Server URL to publish in UDP Auto Discovery response
  publishedServerUrl: https://jellyfin.example.com

  # Load Balancer IP for UDP services
  loadBalancerIP: ""

# -----------------------------------------------------------------------------
# -- Configure Pods and Containers
# -----------------------------------------------------------------------------
containers:
  # Key of the container (e.g. app, db, broker). Used for naming objects.
  app:
    # Define the container as a initContainer.
    init:
      enabled: false
      restartPolicy: Always

    securityContext: {}

    # This sets the container image. 
    # Ref: https://kubernetes.io/docs/concepts/containers/images/
    image:
      repository: jellyfin/jellyfin
      # This sets the pull policy for images.
      pullPolicy: Always
      # Overrides the image tag. Default is the chart appVersion.
      tag: ""

    # This is for setting up a service
    # Ref: https://kubernetes.io/docs/concepts/services-networking/service/
    service:
      http:
        enabled: true
        type: ClusterIP
        port: 8096
        protocol: TCP
        ingress:
          enabled: true
          scheme: http
      ad-svc:
        enabled: true
        type: LoadBalancer
        port: 1900
        protocol: UDP
        ingress:
          enabled: false
          scheme: udp
      ad-client:
        enabled: true
        type: LoadBalancer
        port: 7359
        protocol: UDP
        ingress:
          enabled: false
          scheme: udp

    # This is to setup the liveness and readiness probes
    # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    livenessProbe:
      httpGet:
        path: /
        port: 8096
      initialDelaySeconds: 5
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /
        port: 8096
      initialDelaySeconds: 5
      periodSeconds: 10

    # Additional command line arguments for the container.
    args: []

    # Environment variables to pass to the deployed container. A specific ConfigMap is created.
    # @default -- `{}` (See [values.yaml])
    env:
      TZ: "{{ .Values.global.timezone }}"
      JELLYFIN_PublishedServerUrl: "{{ .Values.global.publishedServerUrl }}"

    # Use ConfigMap from another container (key). Overrides `env`.
    # @default -- `""` (See [values.yaml])
    envUse: ""
    
    # Secret variables to pass to the deployed container. A specific Secret is created.
    # @default -- `{}` (See [values.yaml])
    secret: {}

    # Use ConfigMap from another container (key). Overrides `secret`.
    # @default -- `""` (See [values.yaml])
    secretUse: ""

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      config:
        "config": "/config"
        "cache": "/cache"
      media:
        "{{ .Values.global.media.subPath }}": "{{ .Values.global.media.mountPath }}"

    resources: {}

# This is for the secrets for pulling an image from a private repository
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is for setting Kubernetes Annotations to a Pod.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# -----------------------------------------------------------------------------
# -- Security
# -----------------------------------------------------------------------------
# This section builds out the service account.
# Ref: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC rules for to the service account
# Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
clusterRole: {}

# -----------------------------------------------------------------------------
# -- Services, Load Balancing, and Networking
# -----------------------------------------------------------------------------
# Define the pods DNS configuration. 
# Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig:
  options:
    - name: ndots
      value: "1"

# This block is for setting up the Traefik ingress. 
# Ref: https://doc.traefik.io/traefik/routing/providers/kubernetes-crd/#kind-ingressroutetcp
ingress:
  enabled: true

  # Domainnames (format: <domain>.<tld>).
  # @default -- "{}"
  domains: {} 
    # example.com:
    #   # Override the subdomain (optional).
    #   # @default -- "<app.fullname>"
    #   subdomainOverride: ""
    #   # TLS secret override (optional).
    #   # @default -- "<domain>-<tld>-tls"
    #   tlsSecretOverride: ""
      
  # Entry point of the route.
  # @default -- 'websecure' (See [values.yaml])
  entryPoints:
    http: websecure
    #tcp: ""
    #udp: ""

  # Attach middlewares to ingress route
  # These need to be present within the namespace
  # @default -- `secure-headers` (See [values.yaml])
  middlewares:
    - secure-headers

  # Ingress annotations.
  annotations: {}

# -----------------------------------------------------------------------------
# -- Storage
# -----------------------------------------------------------------------------
# When mounting volumes to the pod, define the secret and namespace where the credentials are located. For now only needed for SMB.
credentials:
  smb:
    secret: smb-credentials
    namespace: default

# Additional volumes on the output Deployment definition.
# Longhorn as storage required for persistent config store.
volumes:
  config:
    className: longhorn
    accessModes: 
      - ReadWriteOnce
    storage: "{{ .Values.global.configStorage }}"
    numberOfReplicas: "{{ .Values.global.configReplicas }}"
  media:
    className: smb
    accessModes: 
      - ReadWriteMany
    storage: 100Gi
    source: "{{ .Values.global.media.source }}"

# -----------------------------------------------------------------------------
# -- Scheduling, Preemption and Eviction
# -----------------------------------------------------------------------------
# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []

# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# -----------------------------------------------------------------------------
# -- Workloads
# -----------------------------------------------------------------------------
# This will set the replicaset count. 
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This section is for setting up autoscaling. 
# Ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
